# 计算前16个斐波那契数列（使用循环和分支指令）
# 寄存器分配：
#   x10: 当前项 F(n)
#   x11: 前一项 F(n-1)
#   x12: 循环计数器（从 2 到 15）
#   x13: 临时寄存器（存储下一个斐波那契数）

    .text
    .globl main

main:
    # 初始化前两项
    li   x10, 1          # F(0) = 1
    li   x11, 2          # F(1) = 2
    li   x12, 2          # 计数器初始值 i=2

loop:
    # 计算下一项 F(i) = F(i-1) + F(i-2)
    add  x13, x10, x11   # x13 = F(i-2) + F(i-1)
    addi x12, x12, 1      # i += 1

    # 更新前两项的值
    mv   x10, x11         # F(i-2) = F(i-1)
    mv   x11, x13         # F(i-1) = F(i)

    # 检查循环条件（i < 16）
    li   x14, 32
    blt  x12, x14, loop   # 若 i < 16，继续循环

    # 结束程序
    wfi